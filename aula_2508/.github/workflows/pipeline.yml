name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  EMAIL_TO: ${{ secrets.EMAIL_TO }}

jobs:
  # Job 1 - Testes
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Rodar testes unitários
        run: mvn test

      - name: Upload relatório de testes
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: target/surefire-reports

  # Job 2 - Build/Empacotamento (roda após testes)
  build:
    runs-on: ubuntu-latest
    needs: [tests]   # só roda se os testes passarem
    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Instalar Maven
        run: |
          sudo apt-get update
          sudo apt-get install -y maven

      - name: Compilar e empacotar
        run: mvn package -DskipTests

      - name: Upload artefato da build
        uses: actions/upload-artifact@v3
        with:
          name: java-package
          path: target/*.jar

  # Job 3 - Notificação
  notify:
    runs-on: ubuntu-latest
    needs: [tests, build]   # espera os outros dois terminarem
    steps:
      - name: Criar script de notificação
        run: |
          echo '#!/bin/bash' > notify.sh
          echo 'echo "Pipeline executado com sucesso!" | mail -s "Status do Pipeline" $EMAIL_TO' >> notify.sh
          chmod +x notify.sh

      - name: Instalar utilitário de e-mail
        run: sudo apt-get update && sudo apt-get install -y mailutils

      - name: Executar notificação
        run: ./notify.sh
